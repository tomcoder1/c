#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <cstring>
#include <climits>
#include <cstdlib>
#include <ctime>
 
#include <vector>
#include <set>
#include <bitset>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <unordered_map>

#pragma GCC optimize("Ofast")
 
using str = std::string;
using ull = unsigned long long;
using ii = std::pair <int, int>;
 
#define X first
#define Y second
#define endl '\n'
#define pb push_back
#define int long long
#define And << " " <<
#define len(x) (long long)x.length()
#define reset(a, x) memset(a, x, sizeof(a))
#define End cout << '\n' << "\n"; return 0;
#define Fu(i, l, r) for (int i = l; i <= r; i++)
#define enter_arr(x, n) Fu(i, 1, n) cin >> x[i];
#define File(x) freopen(x".INP", "r", stdin); freopen(x".OUT", "w", stdout);
#define Fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
using namespace std;

const int N = 1e2 + 5;

/*-------------// Variables \--------------*/
    vector <int> x[N];
    int n, m, d[N], cur[N], a[N][N];
/*------------------------------------------*/

void solve() 
{
    cin >> n >> m;
    Fu(i, 1, m) Fu(j, 1, n) cin >> a[i][j];

    for(int i = 1; i <= n; i++)
    {
        for(int j = 1; j <= m; j++)
            x[i].push_back(a[j][i]);
    }

    for(int i = 1; i <= n; i++)
        sort(x[i].begin(), x[i].end());

    d[0] = 0;
    for(int i = 1; i <= n; i++)
    {
        d[i] = INT_MAX;

        int id = 0;
        for(int j = i-1; j >= 0; j--)
        {
            int t = d[j] + x[i-j][cur[i-j]];
            if (t < d[i]) d[i] = t, id = i-j;
        }

        cur[id]++;
    }

    cout << d[n];
}

int32_t main() 
{
    Fast;
    freopen("test.inp", "r", stdin);
    // int t; cin >> t; while(t--)
        solve();
    End;
}
